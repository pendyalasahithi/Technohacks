import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# dataset
data = pd.read_csv('/content/kc_house_data.csv.zip')

# Handle missing values
data = data.dropna()

# Encode categorical variables
data = pd.get_dummies(data)

# Normalize numerical features
scaler = StandardScaler()
data[['sqft_living', 'bedrooms']] = scaler.fit_transform(data[['sqft_living', 'bedrooms']])

# Split the data into training and testing sets
X = data.drop('price', axis=1)
y = data['price']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Evaluate the model
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)
print(f'Mean Squared Error: {mse}')
print(f'R^2 Score: {r2}')

# Make a prediction for a new house
# Create a DataFrame with the same structure as the training data
new_house = pd.DataFrame(columns=X.columns)
new_house.loc[0] = [2000, 3] + [0] * (len(X.columns) - 2)  # Example: 2000 square feet, 3 bedrooms

# Normalize the new house data
new_house[['sqft_living', 'bedrooms']] = scaler.transform(new_house[['sqft_living', 'bedrooms']])

# Predict the price
predicted_price = model.predict(new_house)
print(f'Predicted Price: {predicted_price}')
